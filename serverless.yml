# For full config options, check the docs: docs.serverless.com

# Plugins
# serverless-iam-roles-per-function: https://github.com/functionalone/serverless-iam-roles-per-function

plugins:
  - serverless-iam-roles-per-function

service: chronicler

# Pin your service to only deploy with a specific Serverless version
frameworkVersion: "=1.31.0"

provider:
  name: aws
  runtime: java8

# you can add packaging information here
package:
  artifact: webhook-handler/build/distributions/hello.zip

functions:
  webhook-handler:
    handler: org.starchartlabs.chronicler.webhook.handler.Handler
    iamRoleStatementsInherit: true
    iamRoleStatements:
    -  Effect: "Allow"
       Action:
         - "ssm:GetParameter"
         - "ssm:GetParametersByPath"
       Resource: { Fn::Join: [":", [ "arn:aws:ssm", { "Ref": "AWS::Region" }, { Ref: "AWS::AccountId" }, "parameter/${self:provider.stage}/chronicler/*" ]] }
    environment:
        GITHUB_WEBHOOK_SECRET_SSM: /${self:provider.stage}/chronicler/github/webhook-secret
    events:
    	- http:
            path: github/webhooks
            method: post

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
